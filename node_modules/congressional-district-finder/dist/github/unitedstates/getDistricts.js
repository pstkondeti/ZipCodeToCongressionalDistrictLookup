'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DEFAULT_HEADERS = exports.ENDPOINT = undefined;
exports.parseDistricts = parseDistricts;
exports.default = getDistricts;

var _requestPromiseNative = require('request-promise-native');

var _requestPromiseNative2 = _interopRequireDefault(_requestPromiseNative);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var ENDPOINT = exports.ENDPOINT = 'https://api.github.com/repos/unitedstates/' + 'districts/contents/cds/2016';

function parseDistricts(_ref) {
    var body = _ref.body,
        headers = _ref.headers;


    var districts = [].concat(_toConsumableArray(body)).map(function (directory) {
        return directory.name;
    });

    return {
        headers: headers,
        districts: districts
    };
}

var DEFAULT_HEADERS = exports.DEFAULT_HEADERS = {
    'User-Agent': 'congressional-district-finder'
};

/**
 * Fetches a list of all congressional districts
 * from JSON hosted by github.com/unitedstates.
 * Subject to rate limits without custom headers.
 * @see https://github.com/unitedstates/districts
 * @see https://developer.github.com/v3/rate_limit/
 * @param {object} customHeaders - If you wish to increase rate limits,
 *                                 pass your github auth credentials,
 *                                 an eTag or Last-Modified header.
 * @returns {Promise} - Resolves with the following:
 *                          districts {object} - an Array of districts.
 *                           Ex: ["AL-1","AL-2",...,"WY-0"]
 *                          headers {object} - The response headers from
 *                           github, including etag and last-modified.
 *                      Rejects with a 304 (at no rate limit penalty) if
 *                           etag or last-modified header is not expired.
 */
function getDistricts(customHeaders) {

    var headers = Object.assign({}, DEFAULT_HEADERS, customHeaders);

    var options = {
        uri: ENDPOINT,
        resolveWithFullResponse: true,
        json: true,
        headers: headers
    };

    return _requestPromiseNative2.default.get(options).then(parseDistricts);
}