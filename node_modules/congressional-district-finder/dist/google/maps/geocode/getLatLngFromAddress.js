'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.INVALID_REQUEST = exports.NO_RESULTS_FOUND = exports.endpoint = undefined;
exports.default = getLatLngFromAddress;

var _requestPromiseNative = require('request-promise-native');

var _requestPromiseNative2 = _interopRequireDefault(_requestPromiseNative);

var _parseJSON = require('./parseJSON');

var _parseJSON2 = _interopRequireDefault(_parseJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var endpoint = exports.endpoint = function endpoint(address) {
    return 'https://maps.googleapis.com/maps/api/geocode/json?address=' + address;
};

var NO_RESULTS_FOUND = exports.NO_RESULTS_FOUND = function NO_RESULTS_FOUND(address) {
    return 'No results found for address: "' + address + '"';
};

var INVALID_REQUEST = exports.INVALID_REQUEST = function INVALID_REQUEST(address) {
    return 'Invalid parameters for address: "' + address + '".';
};

function getLatLngFromAddress(address) {

    return _requestPromiseNative2.default.get({
        json: true,
        uri: endpoint(address)
    }).then(function (data) {
        var status = data.status;


        switch (status) {

            case 'OK':
                return data;

            case 'ZERO_RESULTS':
                return Promise.reject({
                    statusCode: 404,
                    // eslint-disable-next-line babel/new-cap
                    message: NO_RESULTS_FOUND(address)
                });

            default:
                return Promise.reject({
                    statusCode: 400,
                    // eslint-disable-next-line babel/new-cap
                    message: INVALID_REQUEST(address)
                });
        }
    }).then(_parseJSON2.default);
}