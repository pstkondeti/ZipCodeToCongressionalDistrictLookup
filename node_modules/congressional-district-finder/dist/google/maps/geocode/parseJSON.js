'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = parseJSON;
function parseJSON(_ref) {
    var results = _ref.results;

    var _results = _slicedToArray(results, 1),
        _results$ = _results[0],
        address_components = _results$.address_components,
        geometry = _results$.geometry;
    // eslint-disable-next-line camelcase


    var components = address_components;
    var location = geometry.location;


    var state = void 0;
    var zip = void 0;
    var country = void 0;

    components.find(function (_ref2) {
        var short_name = _ref2.short_name,
            types = _ref2.types;

        if (types && types.indexOf('country') !== -1) {
            // eslint-disable-next-line camelcase
            country = short_name;
            return true;
        }
        return false;
    });

    if (country && country === 'US') {
        components.find(function (_ref3) {
            var types = _ref3.types,
                short_name = _ref3.short_name;

            if (types.indexOf('administrative_area_level_1') !== -1) {
                // eslint-disable-next-line camelcase
                state = short_name;
                return true;
            }
            return false;
        });

        components.find(function (_ref4) {
            var types = _ref4.types,
                short_name = _ref4.short_name;

            if (types.indexOf('postal_code') !== -1) {
                // eslint-disable-next-line camelcase
                zip = short_name;
                return true;
            }
            return false;
        });
    }

    return {
        zip: zip,
        state: state,
        location: location,
        country: country
    };
}