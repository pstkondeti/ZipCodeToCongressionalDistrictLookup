'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.COORDS_OUTSIDE_US = undefined;

var _houseGovPageScraper = require('house-gov-page-scraper');

var _getStateZipFromLatLng = require('./google/maps/geocode/getStateZipFromLatLng');

var _getStateZipFromLatLng2 = _interopRequireDefault(_getStateZipFromLatLng);

var _checkLatLngInDistricts = require('./checkLatLngInDistricts');

var _checkLatLngInDistricts2 = _interopRequireDefault(_checkLatLngInDistricts);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var COORDS_OUTSIDE_US = exports.COORDS_OUTSIDE_US = function COORDS_OUTSIDE_US(lat, lng, country) {
    return 'The specified latitude: "' + lat + '" and ' + ('longitude: "' + lng + '" are for the country: ' + country + '. ') + 'To Find a Congressional District, please provide coordinates in the US.';
};

/**
 * Finds a Congressional District based on latitude and longitude.
 * @see https://github.com/unitedstates/districts
 * @param {number} latitude
 * @param {number} longitude
 * @returns {Promise}
 *      Rejects w/ a 404 if no districts match the provided lat lng or
 *      if the provided coordinates reside outside of the US.
 *      Rejects w/ a 400 if coordinates are invalid.
 *      Resolves w/ the following:
 *          isMatched {boolean} - Do the lat,lng reside in the state?
 *          districtId {string} - Hyphen-delimited code for district.
 *                                Ex: AL-1.
 *          district {object} - Information about the district
 *                              from github/unitedstates
 *          district.name {string} - The display name of the district.
 *                                   EX: "Alabama's 1st"
 *          district.districtCode {string} - 5 character, hyphen delmited
 *                                           code for the district.
 *                                           Ex: "AL-01"
 *          district.polygons - {array} An array of "shapes"
 *                                      of lat, lng coordinates that
 *                                      define the district's boundaries.
 *          latitude {number} - Latitude provided.
 *          longitude {number} - Longitude provided.
 */
function getDistrictByLatLng(latitude, longitude) {

    return (0, _getStateZipFromLatLng2.default)(latitude, longitude).then(function (data) {
        var country = data.country;

        if (country !== 'US') {
            return Promise.reject({
                statusCode: 404,
                // eslint-disable-next-line babel/new-cap
                message: COORDS_OUTSIDE_US(latitude, longitude, country)
            });
        }
        return data;
    }).then(function (_ref) {
        var zip = _ref.zip;
        return (0, _houseGovPageScraper.getDistrictsInZip)(zip);
    }).then(function (districts) {
        return (0, _checkLatLngInDistricts2.default)(latitude, longitude, districts);
    });
}

exports.default = getDistrictByLatLng;