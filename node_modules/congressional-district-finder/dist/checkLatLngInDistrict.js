'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getDistrictShape = require('./github/unitedstates/getDistrictShape');

var _getDistrictShape2 = _interopRequireDefault(_getDistrictShape);

var _isLatLngInMultiPolygon = require('./geolib/isLatLngInMultiPolygon');

var _isLatLngInMultiPolygon2 = _interopRequireDefault(_isLatLngInMultiPolygon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Retrieves an array of Congressional districts based on zip
 * by scraping house.gov's district finder.
 * @see http://ziplook.house.gov/htbin/findrep
 * @param {string} zip -    A 5 digit zip code.
 *                          Prefix 4 digit zip codes w/ "0".
 * @returns {Promise}
 *      Rejects with a 404 if no district codes are found.
 *      Resolves with an array of hyphen delimited district codes.
 *      ex: ['AL-1','AL-2']
 */
function checkLatLngInDistrict(lat, lng, districtId) {
    return (0, _getDistrictShape2.default)(districtId).then(function (district) {
        var polygons = district.polygons;

        var isMatched = (0, _isLatLngInMultiPolygon2.default)(lat, lng, polygons);

        return {
            isMatched: isMatched,
            districtId: districtId,
            district: district,
            latitude: lat,
            longitude: lng
        };
    });
}

exports.default = checkLatLngInDistrict;