'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ADDRESS_MORE_SPECIFIC = exports.ADDRESS_OUTSIDE_US = undefined;
exports.default = getDistrictByAddress;

var _houseGovPageScraper = require('house-gov-page-scraper');

var _getLatLngFromAddress = require('./google/maps/geocode/getLatLngFromAddress');

var _getLatLngFromAddress2 = _interopRequireDefault(_getLatLngFromAddress);

var _checkLatLngInDistricts = require('./checkLatLngInDistricts');

var _checkLatLngInDistricts2 = _interopRequireDefault(_checkLatLngInDistricts);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ADDRESS_OUTSIDE_US = exports.ADDRESS_OUTSIDE_US = function ADDRESS_OUTSIDE_US(address, country) {
    return 'The specified address: "' + address + '" ' + ('appears to be from the country: ' + country + '. ') + 'To Find a Congressional District, ' + 'please provide coordinates in the US. ' + 'More specific coordinates might also work.';
};

var ADDRESS_MORE_SPECIFIC = exports.ADDRESS_MORE_SPECIFIC = function ADDRESS_MORE_SPECIFIC(address) {
    return 'The specified address: "' + address + '" ' + 'appears to be too vague. Try including a street name and number.';
};

/**
 * Finds a Congressional District based on address.
 * @see https://github.com/unitedstates/districts
 * @see https://maps.googleapis.com/maps/api/geocode/json
 * @param {string} address
 * @returns {Promise}
 *      Rejects w/ a 404 if address is determined to be outside of the US.
 *      Rejects w/ a 400 if address is too vauge.
 *      Resolves w/ the following:
 *          isMatched {boolean} - Do the lat,lng reside in the state?
 *          districtId {string} - Hyphen-delimited code for district.
 *                                Ex: AL-1.
 *          district {object} - Information about the district
 *                              from github/unitedstates
 *          district.name {string} - The display name of the district.
 *                                   EX: "Alabama's 1st"
 *          district.districtCode {string} - 5 character, hyphen delmited
 *                                           code for the district.
 *                                           Ex: "AL-01"
 *          district.polygons - {array} An array of "shapes"
 *                                      of lat, lng coordinates that
 *                                      define the district's boundaries.
 *          latitude {number} - Latitude provided.
 *          longitude {number} - Longitude provided.
 */
function getDistrictByAddress(address) {

    var lat = void 0;
    var lng = void 0;

    return (0, _getLatLngFromAddress2.default)(address).then(function (_ref) {
        var country = _ref.country,
            zip = _ref.zip,
            location = _ref.location;


        if (country !== 'US') {
            return Promise.reject({
                statusCode: 404,
                // eslint-disable-next-line babel/new-cap
                message: ADDRESS_OUTSIDE_US(address, country)
            });
        }

        if (!zip) {
            return Promise.reject({
                statusCode: 400,
                // eslint-disable-next-line babel/new-cap
                message: ADDRESS_MORE_SPECIFIC(address)
            });
        }

        lat = location.lat;
        lng = location.lng;

        return (0, _houseGovPageScraper.getDistrictsInZip)(zip);
    }).then(function (districts) {
        return (0, _checkLatLngInDistricts2.default)(lat, lng, districts);
    });
}